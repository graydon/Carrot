(synonym CupState (Option Number))
(= (cup Number CupState) x (some x))
(= (broken-cup CupState) none)

(synonym CupEvent (Pair Keyword Number))        ;;;shame///
(= (fill  Number CupEvent) x (pair :fill  x))
(= (spill Number CupEvent) x (pair :spill x))
(= (drop-cup  CupEvent) (pair :drop 0))

(= (next-cup-state CupEvent CupState CupState)
   ce cs
   (opt>>= cs
           (^ x (=? (fst ce) :fill  (cup (+ x (snd ce)))
                (=? (fst ce) :spill (cup (- x (snd ce)))
                                    broken-cup)))))

(= (example-cup-events (List CupEvent))
   (-> nil
    -> (cons (spill 8))
    -> (cons (fill  10))
;;  -> (cons drop-cup)
    -> (cons (spill 40))
    <- (cons (fill  20))))


(= (example-main Number)
   (/> (foldl next-cup-state (cup 100) example-cup-events)
       (^ cs (none? cs (print 0 "The cup is broken")
                    (print 0 (+++ "The cup has " (num->str (pull cs)) "ml of coffee"))))))
